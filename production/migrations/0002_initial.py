# Generated by Django 4.1 on 2024-08-28 13:35

from django.db import migrations, models
import django.db.models.deletion
import production.models
import sortedm2m.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
        ('common', '0001_initial'),
        ('people', '0001_initial'),
        ('assets', '0001_initial'),
        ('production', '0001_initial'),
        ('diffusion', '0002_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='event',
            name='place',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='diffusion.place'),
        ),
        migrations.AddField(
            model_name='event',
            name='subevents',
            field=models.ManyToManyField(blank=True, limit_choices_to=production.models.main_event_false_limit, related_name='parent_event', to='production.event'),
        ),
        migrations.AddField(
            model_name='artwork',
            name='authors',
            field=models.ManyToManyField(related_name='%(class)ss', to='people.artist'),
        ),
        migrations.AddField(
            model_name='artwork',
            name='beacons',
            field=models.ManyToManyField(blank=True, related_name='%(class)ss', to='common.btbeacon'),
        ),
        migrations.AddField(
            model_name='artwork',
            name='in_situ_galleries',
            field=sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, related_name='artworks_insitu', to='assets.gallery'),
        ),
        migrations.AddField(
            model_name='artwork',
            name='keywords',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='artwork',
            name='mediation_galleries',
            field=sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, related_name='artworks_mediation', to='assets.gallery'),
        ),
        migrations.AddField(
            model_name='artwork',
            name='press_galleries',
            field=sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, related_name='artworks_press', to='assets.gallery'),
        ),
        migrations.AddField(
            model_name='artwork',
            name='process_galleries',
            field=sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, related_name='artworks_process', to='assets.gallery'),
        ),
        migrations.AddField(
            model_name='artwork',
            name='teaser_galleries',
            field=sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, related_name='artworks_teaser', to='assets.gallery'),
        ),
        migrations.AlterUniqueTogether(
            name='itineraryartwork',
            unique_together={('itinerary', 'order'), ('itinerary', 'artwork')},
        ),
        migrations.AddField(
            model_name='installation',
            name='genres',
            field=models.ManyToManyField(to='production.installationgenre'),
        ),
        migrations.AddField(
            model_name='film',
            name='genres',
            field=models.ManyToManyField(blank=True, to='production.filmgenre'),
        ),
        migrations.AddField(
            model_name='film',
            name='shooting_place',
            field=models.ManyToManyField(blank=True, to='diffusion.place'),
        ),
        migrations.AddField(
            model_name='event',
            name='films',
            field=models.ManyToManyField(blank=True, related_name='events', to='production.film'),
        ),
        migrations.AddField(
            model_name='event',
            name='installations',
            field=models.ManyToManyField(blank=True, related_name='events', to='production.installation'),
        ),
        migrations.AddField(
            model_name='event',
            name='performances',
            field=models.ManyToManyField(blank=True, related_name='events', to='production.performance'),
        ),
    ]
